// Intercom UI Clone using React.js + TailwindCSS
// Basic layout with Sidebar, Header, Inbox and Chat View using dummy data

import { useState } from 'react';
import { InboxIcon, Cog6ToothIcon, ChatBubbleLeftRightIcon } from '@heroicons/react/24/outline';

const Sidebar = ({ onSelect }) => (
  <div className="w-64 bg-gray-900 text-white h-screen p-4 space-y-4">
    <h1 className="text-xl font-bold">Intercom Clone</h1>
    <button onClick={() => onSelect('inbox')} className="flex items-center gap-2">
      <InboxIcon className="h-5 w-5" /> Inbox
    </button>
    <button onClick={() => onSelect('settings')} className="flex items-center gap-2">
      <Cog6ToothIcon className="h-5 w-5" /> Settings
    </button>
  </div>
);

const Header = () => (
  <div className="bg-white p-4 border-b flex justify-between items-center">
    <input
      className="border p-2 rounded w-1/3"
      placeholder="Search conversations..."
    />
    <div>User Name</div>
  </div>
);

const Inbox = ({ onSelectChat }) => {
  const dummyChats = [
    { id: 1, name: 'John Doe', lastMessage: 'Hey, I need help!' },
    { id: 2, name: 'Jane Smith', lastMessage: 'Can you check this?' },
  ];

  return (
    <div className="w-1/3 border-r">
      {dummyChats.map((chat) => (
        <div
          key={chat.id}
          onClick={() => onSelectChat(chat)}
          className="p-4 border-b hover:bg-gray-100 cursor-pointer"
        >
          <strong>{chat.name}</strong>
          <p className="text-sm text-gray-600">{chat.lastMessage}</p>
        </div>
      ))}
    </div>
  );
};

const ChatView = ({ chat }) => (
  <div className="flex-1 p-4">
    <h2 className="font-bold mb-2">{chat?.name || 'No Chat Selected'}</h2>
    {chat && <p className="text-gray-600">{chat.lastMessage}</p>}
  </div>
);

const Settings = () => (
  <div className="p-4">
    <h2 className="font-bold mb-2">Settings</h2>
    <p>Settings content goes here...</p>
  </div>
);

export default function App() {
  const [page, setPage] = useState('inbox');
  const [selectedChat, setSelectedChat] = useState(null);

  return (
    <div className="flex h-screen">
      <Sidebar onSelect={setPage} />
      <div className="flex flex-col flex-1">
        <Header />
        <div className="flex flex-1">
          {page === 'inbox' ? (
            <>
              <Inbox onSelectChat={setSelectedChat} />
              <ChatView chat={selectedChat} />
            </>
          ) : (
            <Settings />
          )}
        </div>
      </div>
    </div>
  );
}